name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true
        default: '1.2.0'

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
    
    steps:
    - name: Install dependencies
      run: |
        pacman -Syu --noconfirm
        pacman -S --noconfirm base-devel git
    
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup makepkg user
      run: |
        useradd -m builder
        echo "builder ALL=(ALL) NOPASSWD: ALL" >> /etc/sudoers
        chown -R builder:builder .
    
    - name: Build package
      run: |
        su builder -c "cd /github/workspace && ./build-package.sh --build"
    
    - name: Find package file
      id: package
      run: |
        PKG_FILE=$(find build -name "*.pkg.tar.*" | head -1)
        echo "file=$PKG_FILE" >> $GITHUB_OUTPUT
        echo "name=$(basename $PKG_FILE)" >> $GITHUB_OUTPUT
    
    - name: Create Release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ steps.package.outputs.file }}
        body: |
          ## Ambiente Backup ${{ github.ref_name }}
          
          Sistema completo de backup e restauração de ambiente Linux.
          
          ### Instalação
          
          #### Via AUR (Arch Linux)
          ```bash
          yay -S ambiente-backup
          ```
          
          #### Download direto
          1. Baixe o arquivo `.pkg.tar.zst` abaixo
          2. Instale com: `sudo pacman -U ambiente-backup-*.pkg.tar.zst`
          
          ### Uso
          ```bash
          # Interface gráfica principal
          ambiente-backup
          
          # Ou alternativamente
          backup-ambiente
          backup-env      # Apenas backup
          restore-env     # Apenas restauração
          ```
          
          ### Novidades nesta versão
          - Interface gráfica com zenity
          - Instalação via AUR
          - Comandos intuitivos
          - Integração com menu do sistema
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  update-aur:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup SSH for AUR
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.AUR_SSH_KEY }}" > ~/.ssh/aur
        chmod 600 ~/.ssh/aur
        echo "Host aur.archlinux.org" >> ~/.ssh/config
        echo "  HostName aur.archlinux.org" >> ~/.ssh/config
        echo "  User aur" >> ~/.ssh/config
        echo "  IdentityFile ~/.ssh/aur" >> ~/.ssh/config
        echo "  StrictHostKeyChecking no" >> ~/.ssh/config
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git
    
    - name: Clone AUR repository
      run: |
        git clone ssh://aur@aur.archlinux.org/ambiente-backup.git aur-repo
    
    - name: Update AUR package
      run: |
        cd aur-repo
        cp ../PKGBUILD .
        
        # Atualizar versão se necessário
        VERSION=${GITHUB_REF#refs/tags/v}
        sed -i "s/pkgver=.*/pkgver=$VERSION/" PKGBUILD
        
        # Gerar .SRCINFO
        docker run --rm -v $(pwd):/pkg archlinux:latest bash -c "
          pacman -Syu --noconfirm base-devel
          cd /pkg
          makepkg --printsrcinfo > .SRCINFO
        "
        
        # Commit e push
        git config user.name 'GitHub Actions'
        git config user.email 'actions@github.com'
        git add PKGBUILD .SRCINFO
        git commit -m "Update to version $VERSION"
        git push
    
    env:
      AUR_SSH_KEY: ${{ secrets.AUR_SSH_KEY }}