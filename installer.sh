#!/usr/bin/env bash
# Script de instala√ß√£o autom√°tica do ambiente-backup

set -euo pipefail

# Cores
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() { echo -e "${BLUE}[INSTALL]${NC} $*"; }
success() { echo -e "${GREEN}[SUCCESS]${NC} $*"; }
warn() { echo -e "${YELLOW}[INFO]${NC} $*"; }
error() { echo -e "${RED}[ERROR]${NC} $*"; exit 1; }

check_system() {
    log "Verificando sistema..."
    
    if ! command -v pacman &> /dev/null; then
        error "Este script √© apenas para Arch Linux (pacman n√£o encontrado)"
    fi
    
    if ! command -v yay &> /dev/null; then
        warn "yay n√£o encontrado, tentando instalar..."
        install_yay
    fi
    
    success "Sistema compat√≠vel"
}

install_yay() {
    log "Instalando yay..."
    
    # Instalar depend√™ncias
    sudo pacman -S --needed --noconfirm base-devel git
    
    # Clonar e compilar yay
    cd /tmp
    rm -rf yay
    git clone https://aur.archlinux.org/yay.git
    cd yay
    makepkg -si --noconfirm
    
    success "yay instalado com sucesso"
}

sync_databases() {
    log "Sincronizando bases de dados..."
    
    # Sincronizar reposit√≥rios oficiais
    sudo pacman -Sy --noconfirm
    
    # Sincronizar AUR (for√ßar atualiza√ß√£o)
    yay -Syy --noconfirm
    
    success "Bases de dados sincronizadas"
}

install_ambiente_backup() {
    log "Instalando ambiente-backup..."
    
    # Tentar instala√ß√£o via yay
    if yay -S ambiente-backup --noconfirm; then
        success "ambiente-backup instalado via yay!"
        return 0
    fi
    
    warn "Instala√ß√£o via yay falhou, tentando m√©todo manual..."
    
    # M√©todo manual (backup)
    cd /tmp
    rm -rf ambiente-backup
    git clone https://aur.archlinux.org/ambiente-backup.git
    cd ambiente-backup
    makepkg -si --noconfirm
    
    success "ambiente-backup instalado manualmente!"
}

test_installation() {
    log "Testando instala√ß√£o..."
    
    local commands=(ambiente-backup backup-ambiente backup-env restore-env)
    
    for cmd in "${commands[@]}"; do
        if command -v "$cmd" &> /dev/null; then
            success "Comando '$cmd' dispon√≠vel"
        else
            error "Comando '$cmd' n√£o encontrado"
        fi
    done
    
    success "Instala√ß√£o testada com sucesso!"
}

show_completion() {
    echo
    success "üéâ Instala√ß√£o conclu√≠da!"
    echo
    echo -e "${GREEN}Comandos dispon√≠veis:${NC}"
    echo "  ‚Ä¢ ambiente-backup     (interface principal)"
    echo "  ‚Ä¢ backup-ambiente     (alias)"
    echo "  ‚Ä¢ backup-env          (s√≥ backup)"
    echo "  ‚Ä¢ restore-env         (s√≥ restaura√ß√£o)"
    echo
    echo -e "${BLUE}Para usar:${NC}"
    echo "  ambiente-backup"
    echo
    echo -e "${BLUE}Ou procure no menu:${NC} Sistema ‚Üí Ambiente Backup"
    echo
}

main() {
    echo -e "${BLUE}=== Instalador Ambiente Backup ===${NC}"
    echo "Sistema completo de backup e restaura√ß√£o de ambiente Linux"
    echo
    
    check_system
    sync_databases
    install_ambiente_backup
    test_installation
    show_completion
}

# Verificar se est√° sendo executado como root
if [[ $EUID -eq 0 ]]; then
    error "N√£o execute este script como root. Use seu usu√°rio normal."
fi

main "$@"